(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,s)=>{const a=s(475),n=s(27),{lightningChart:r,AxisTickStrategies:i,AxisScrollStrategies:o,Themes:l}=a,{createProgressiveTraceGenerator:c}=n,g=r().Chart3D({}).setBoundingBox({x:1,y:.5,z:.4}).setTitle("3D Realtime Line Series");g.getDefaultAxisX().setTitle("Axis X"),g.getDefaultAxisY().setTitle("Axis Y"),g.getDefaultAxisZ().setTitle(""),g.getDefaultAxisZ().setTickStrategy(i.Empty);const d=[{name:"Series A"},{name:"Series B"},{name:"Series C"},{name:"Series D"},{name:"Series E"}];g.getDefaultAxisX().setInterval({start:-1e3,end:0,stopAxisAfter:!1}).setScrollStrategy(o.progressive),g.getDefaultAxisZ().setInterval({start:-1,end:1+d.reduce(((e,t,s)=>Math.max(e,s)),0)}),Promise.all(d.map(((e,t)=>{const s=e.name||"",a=e.z||t,n=g.addLineSeries().setName(s);return c().setNumberOfPoints(1250).generate().toPromise().then((e=>e.map((e=>({y:e.y,z:a}))))).then((e=>({series:n,data:e.concat(e.slice(1,-1).reverse())})))}))).then((e=>{g.addLegendBox().setAutoDispose({type:"max-width",maxWidth:.2}).add(g);let t=Date.now(),s=0,a=0;e.forEach((e=>e.currentData=[]));const n=()=>{for(let t=0;t<5;t++){for(const{series:t,data:n,currentData:r}of e){const e=n[a%n.length],i={x:a,y:e.y,z:e.z};t.add(i),r.push(i),s++}a++}requestAnimationFrame(n)};n(),setInterval((()=>{const t=1e3;for(let s=0;s<e.length;s++){const{series:a,data:n,currentData:r}=e[s];if(r.length<t)continue;const i=r.length-t,o=Math.min(t,r.length-i),l=r.splice(i,o);a.clear().add(l),e[s].currentData=l}}),1e3);const r=g.getTitle();let i=Date.now();setInterval((()=>{if(s>0&&Date.now()-t>0){const e=1e3*s/(Date.now()-t);g.setTitle(`${r} (${Math.round(e)} data points / s)`)}Date.now()-i>=5e3&&(t=i=Date.now(),s=0)}),1e3)}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);