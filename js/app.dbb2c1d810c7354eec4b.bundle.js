(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,s)=>{const a=s(809),{lightningChart:n,AxisTickStrategies:i,AxisScrollStrategies:r,Themes:o}=a,{createProgressiveTraceGenerator:l}=s(27),c=n().Chart3D({disableAnimations:!0}).setBoundingBox({x:1,y:.5,z:.4}).setTitle("3D Realtime Line Series");c.getDefaultAxisX().setTitle("Axis X"),c.getDefaultAxisY().setTitle("Axis Y"),c.getDefaultAxisZ().setTitle(""),c.getDefaultAxisZ().setTickStrategy(i.Empty);const g=[{name:"Series A"},{name:"Series B"},{name:"Series C"},{name:"Series D"},{name:"Series E"}];c.getDefaultAxisX().setInterval(-1e3,0).setScrollStrategy(r.progressive),c.getDefaultAxisZ().setInterval(-1,1+g.reduce(((e,t,s)=>Math.max(e,s)),0),!1,!0),Promise.all(g.map(((e,t)=>{const s=e.name||"",a=e.z||t,n=c.addLineSeries().setName(s);return l().setNumberOfPoints(1250).generate().toPromise().then((e=>e.map((e=>({y:e.y,z:a}))))).then((e=>({series:n,data:e.concat(e.slice(1,-1).reverse())})))}))).then((e=>{c.addLegendBox().setAutoDispose({type:"max-width",maxWidth:.2}).add(c);let t=Date.now(),s=0,a=0;e.forEach((e=>e.currentData=[]));const n=()=>{for(let t=0;t<5;t++){for(const{series:t,data:n,currentData:i}of e){const e=n[a%n.length],r={x:a,y:e.y,z:e.z};t.add(r),i.push(r),s++}a++}requestAnimationFrame(n)};n(),setInterval((()=>{const t=1e3;for(let s=0;s<e.length;s++){const{series:a,data:n,currentData:i}=e[s];if(i.length<t)continue;const r=i.length-t,o=Math.min(t,i.length-r),l=i.splice(r,o);a.clear().add(l),e[s].currentData=l}}),1e3);const i=c.getTitle();let r=Date.now();setInterval((()=>{if(s>0&&Date.now()-t>0){const e=1e3*s/(Date.now()-t);c.setTitle(`${i} (${Math.round(e)} data points / s)`)}Date.now()-r>=5e3&&(t=r=Date.now(),s=0)}),1e3)}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);